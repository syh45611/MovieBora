<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="memberns">

	<!-- 회원 아이디 조회 -->
	<select id="selectId" parameterType="string" resultType="member">
		select * from member where memberId=#{memberId} and memberDel='n'
	</select>
	<select id="selectEmail" parameterType="string" resultType="member">
		select * from member where memberEmail=#{memberEmail} and memberDel='n'
	</select>
	
	<!-- id로 회원번호 조회 -->
	<select id="selectMno" parameterType="string" resultType="integer">
		select memberNo from member where memberId=#{memberId}
	</select>
	
	<!-- mno로 별명 조회 -->
	<select id="selectNick" parameterType="integer" resultType="string">
		select memberNickname from member where memberNo=#{memberNo}
	</select>
	
	<!-- mno로 회원 정보 조회 -->
	<select id="selectReserve" parameterType="integer" resultType="member">
		select * from member where memberNo = #{memberNo}
	</select>

	<!-- 닉네임 중복확인 -->
	<select id="confirmNick" parameterType="string" resultType="member">
		select * from member where memberNickname=#{memberNickname} and memberDel='n'
	</select>
	<!-- 회원번호 입력 -->
	<select id="selectMemberNo" resultType="integer">
		select count(*)+1 from member
	</select>

	<!-- 회원 가입 -->
	<insert id="insert" parameterType="member">
		insert into member values(#{memberNo}, #{memberId}, #{memberPass}, #{memberName}, #{memberNickname}, #{memberEmail}, #{memberProfile}, #{memberGender},'n', sysdate)
	</insert>	
	<!-- 전체회원정보 조회 -->
	<select id="list" parameterType="hashmap" resultType="member">
		select * from (select rowNum rn, e.* from (select * from member order by memberNo desc) e) 
			where rn between #{startRow} and #{endRow}
	</select>	
	<!-- 총 회원수 조회 -->
	<select id="getTotal" resultType="integer">
		select count(*) from member
	</select>
	
	<!-- 아이디 찾기 -->
	<select id="findId" parameterType="hashmap" resultType="member">
		select memberId from member where memberName=#{memberName} and memberEmail=#{memberEmail}
	</select>
	
	<!-- 비밀번호 찾기 -->
	<select	id="findPassword" parameterType="string" resultType="member">
		select memberPass from member where memberId=#{memberId} and memberName=#{memberName}
	</select> 
	
	<!-- 회원 검색(관리자) -->
	 <select id="searchMember" parameterType="hashmap" resultType="member">
		select * from member where
		<choose>
			<when test="searchKey.equals('memberId')"> memberId like '%'||#{searchValue}||'%'</when> 
			<when test="searchKey.equals('memberName')"> memberName like '%'||#{searchValue}||'%'</when> 
			<otherwise> memberNickname like '%'||#{searchValue}||'%'
			</otherwise>
		</choose>
			 order by memberNo desc
	</select>
	
	<!-- 회원정보 수정 -->
	<update id="update" parameterType="member">
		update member set memberPass=#{memberPass}, memberName=#{memberName}, memberNickname=#{memberNickname}, 
		memberGender=#{memberGender}, memberEmail=#{memberEmail}, memberProfile=#{memberProfile} where memberId=#{memberId}
	</update>
	
	<!-- 회원 탈퇴 -->
	<update id="delete" parameterType="integer">
		update member set memberDel='y' where memberNo=#{memberNo}	
	</update> 
	<select id ="selectMember" parameterType="string" resultType="member">
		select * from member where memberId = #{memberId} and memberDel='n'
	</select>
</mapper>